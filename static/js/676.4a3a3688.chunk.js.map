{"version":3,"file":"static/js/676.4a3a3688.chunk.js","mappings":"6PAiBA,MA6iBA,EA5fiBA,KACf,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAOC,EAAAA,EAAUC,MAAKF,GAAQA,EAAKN,KAAOA,IAG1CS,EAAU,yBAEVC,EAAQ,GAAAC,OAAMF,EAAO,YAAAE,OAAWX,GAGhCY,EAAgB,GAAAD,OAAMF,EAAO,UAAAE,OAASX,EAAE,YAAAW,QAAW,IAAIE,MAAOC,WAGpE,IAAIC,EAAW,GACXC,EAAoB,GACpBC,EAAmB,GACnBC,GAAU,IAAIL,MAAOM,cACzB,MAAMC,GAAY,IAAIP,MAAOC,UAG7B,GAAIR,EAAM,CACRe,QAAQC,IAAI,0BAA2BtB,GACvCqB,QAAQC,IAAI,mBAAoBhB,EAAKiB,OAGrCR,EAAWT,EAAKiB,MAGXjB,EAAKiB,MAAMC,WAAW,QAIzBH,QAAQC,IAAI,sBAAuBP,IAHnCA,EAAQ,GAAAJ,OAAMF,GAAOE,OAAGL,EAAKiB,OAC7BF,QAAQC,IAAI,iDAAkDP,IAOhE,IAAIU,EAAgBV,EAChBU,EAAcC,SAAS,OACzBD,EAAgBA,EAAcE,MAAM,KAAK,GACzCN,QAAQC,IAAI,kCAAgCG,IAK7B,MAAAd,QAAS,IAAIE,MAAOC,WACrCG,EAAmBQ,EACnBJ,QAAQC,IAAI,qCAAsCL,GAKhDD,EAFEV,EAAKiB,MAAMC,WAAW,KAEP,GAAAb,OAAML,EAAKiB,MAAK,OAAAZ,OAAMS,GAC9Bd,EAAKiB,MAAMC,WAAW,QAEd,GAAAb,OAAMc,EAAa,OAAAd,OAAMS,GAGzB,IAAAT,OAAOL,EAAKiB,MAAK,OAAAZ,OAAMS,GAG1CC,QAAQC,IAAI,wCAAsCN,GAGlD,IACEE,EAAUZ,EAAKsB,KAAO,IAAIf,KAAKP,EAAKsB,MAAMT,eAAgB,IAAIN,MAAOM,aACvE,CAAE,MAAOU,GACPR,QAAQS,KAAK,iCAADnB,OAAkCX,EAAE,MAAAW,OAAKL,EAAKsB,OAC1DV,GAAU,IAAIL,MAAOM,aACvB,CACF,EAGAY,EAAAA,EAAAA,YAAU,KASR,GAPAV,QAAQC,IAAI,sBAAuBtB,GACnCqB,QAAQC,IAAI,YAAalB,EAAS4B,UAClCX,QAAQC,IAAI,cAAmB,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,OACjCF,QAAQC,IAAI,aAAcZ,GAC1BW,QAAQC,IAAI,+BAA+B,kDAADX,OAAoDsB,mBAAmBvB,MAG5GJ,EAGH,OAFAe,QAAQa,MAAM,uBAADvB,OAAwBX,SACrCE,EAAS,SAKX,GAAIc,EAAmB,CACrB,MAAMmB,EAAe,IAAIC,MACzBD,EAAaE,IAAMrB,EACnBmB,EAAaG,OAAS,KACpBjB,QAAQC,IAAI,mCAAoCN,EAAkB,EAEpEmB,EAAaI,QAAU,KACrBlB,QAAQa,MAAM,gCAAiClB,EAAkB,CAErE,CAGyB,qBAAdwB,OAAOC,IAChBD,OAAOC,GAAGC,MAAMC,QAIdrC,IACFsC,SAASC,MAAK,GAAAlC,OAAML,EAAKuC,MAAK,wDAIhC,MAAMC,EAAWF,SAASG,qBAAqB,QAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACU,aAAzCF,EAASE,GAAGE,aAAa,aACzBJ,EAASE,GAAGE,aAAa,OAI/B,GACC,CAAC5C,EAAMI,EAAUV,EAAII,EAAUF,EAAUc,KAG5Ce,EAAAA,EAAAA,YAAU,KACR,IAAKzB,EAAM,OAGiB6C,WAC1B,IAEE,IAAIC,EAAaR,SAASS,cAAc,6BAWxC,OAVKD,IACHA,EAAaR,SAASU,cAAc,QACpCF,EAAWG,aAAa,WAAY,YACpCX,SAASY,KAAKC,YAAYL,IAE5BA,EAAWG,aAAa,UAAWtC,GAEnCI,QAAQC,IAAI,uDAAqDL,GAG1D,IAAIyC,SAASC,IAClB,MAAMC,EAAM,IAAIxB,MAChBwB,EAAItB,OAAS,KACXjB,QAAQC,IAAI,iCACZqC,GAAQ,EAAK,EAEfC,EAAIrB,QAAU,KACZlB,QAAQa,MAAM,gEACdyB,GAAQ,EAAM,EAEhBC,EAAIvB,IAAMpB,CAAgB,GAE9B,CAAE,MAAOiB,GACPb,QAAQa,MAAM,kDAAgDA,EAChE,GAGF2B,EAAqB,GACpB,CAACvD,EAAMW,IAiBV,IAAKX,EACH,OAAO,KAIT,MAAMwD,EAAmB,CACvB,WAAY,qBACZ,QAAS,cACT,iBAAoB,CAClB,QAAS,UACT,MAAOpD,GAET,SAAYJ,EAAKuC,MACjB,YAAevC,EAAKyD,YACpB,MAAS9C,EACT,OAAU,CACR,QAAS,eACT,KAAQ,UACR,IAAO,0BAET,UAAa,CACX,QAAS,eACT,KAAQ,UACR,KAAQ,CACN,QAAS,cACT,IAAO,iDAGX,cAAiBC,EACjB,aAAgBA,GAGlB,OACE8C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAACC,mBAAiB,EAAAF,SAAA,EACvBG,EAAAA,EAAAA,KAAA,SAAAH,SAAA,GAAAvD,OAAWL,EAAKuC,MAAK,0DACrBwB,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAASjE,EAAKyD,eACvCM,EAAAA,EAAAA,KAAA,QAAMG,IAAI,YAAYC,KAAM/D,KAG5B2D,EAAAA,EAAAA,KAAA,QAAMK,UAAU,gBAAgBH,QAAQ,yCACxCF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,SAASH,QAAQ,cACjCF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAAUH,QAAQ,OAGlCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,SAASJ,QAAS7D,KACjC2D,EAAAA,EAAAA,KAAA,QAAMM,SAAS,UAAUJ,QAAQ,aACjCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,WAAWJ,QAASjE,EAAKuC,SACxCwB,EAAAA,EAAAA,KAAA,QAAMM,SAAS,iBAAiBJ,QAASjE,EAAKyD,eAC9CM,EAAAA,EAAAA,KAAA,QAAMM,SAAS,WAAWJ,QAAStD,KACnCoD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,sBAAsBJ,QAAStD,KAC9CoD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,iBAAiBJ,QAAQ,UACxCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,kBAAkBJ,QAAQ,SACzCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,eAAeJ,QAASjE,EAAKuC,SAC5CwB,EAAAA,EAAAA,KAAA,QAAMM,SAAS,gBAAgBJ,QAAQ,gBACvCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,eAAeJ,QAAQ,aACtCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,kBAAkBJ,SAAS,IAAI1D,MAAOM,iBACrDkD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,YAAYJ,QAAQ,sBACnCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,yBAAyBJ,QAASrD,KACjDmD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,wBAAwBJ,SAAS,IAAI1D,MAAOM,iBAC3DkD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,iBAAiBJ,QAAQ,aACxCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,kBAAkBJ,QAAQ,mBACzCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,cAAcJ,QAASjE,EAAKsE,KAAOtE,EAAKsE,KAAKC,KAAK,MAAQ,wEAGzER,EAAAA,EAAAA,KAAA,QAAMC,KAAK,eAAeC,QAAQ,yBAClCF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,eAAeC,QAAQ,cAClCF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,kBAAkBC,QAAQ,cACrCF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAS7D,KAClC2D,EAAAA,EAAAA,KAAA,QAAMC,KAAK,gBAAgBC,QAASjE,EAAKuC,SACzCwB,EAAAA,EAAAA,KAAA,QAAMC,KAAK,sBAAsBC,QAASjE,EAAKyD,eAC/CM,EAAAA,EAAAA,KAAA,QAAMC,KAAK,gBAAgBC,QAAStD,KACpCoD,EAAAA,EAAAA,KAAA,QAAMC,KAAK,oBAAoBC,QAASjE,EAAKuC,SAG7CwB,EAAAA,EAAAA,KAAA,QAAMC,KAAK,SAASC,QAAQ,4CAC5BF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,SAASC,QAAQ,aAC5BF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,YAAYC,QAAQ,aAC/BF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,WAAWC,QAASjE,EAAKsE,KAAOtE,EAAKsE,KAAKC,KAAK,MAAQ,qHAGlER,EAAAA,EAAAA,KAAA,QAAMM,SAAS,iBAAiBJ,QAASjE,EAAKuC,SAC9CwB,EAAAA,EAAAA,KAAA,QAAMM,SAAS,uBAAuBJ,QAASjE,EAAKyD,eACpDM,EAAAA,EAAAA,KAAA,QAAMM,SAAS,iBAAiBJ,QAAStD,KAGzCoD,EAAAA,EAAAA,KAAA,QAAMM,SAAS,eAAeJ,QAAQ,aACtCF,EAAAA,EAAAA,KAAA,QAAMM,SAAS,YAAYJ,QAAQ,WAGnCF,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAQ,aACjCF,EAAAA,EAAAA,KAAA,QAAM,aAAW,yBAAyBE,QAAQ,QAGlDF,EAAAA,EAAAA,KAAA,UAAQS,KAAK,sBAAqBZ,SAC/Ba,KAAKC,UAAUlB,SAIpBO,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,UACTC,UAAW,QACXC,GAAI,CAAEC,GAAI,EAAGC,GAAI,QACjBC,GAAI,GACJtB,UACAG,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,CAACC,SAAS,KAAKR,GAAI,CAAES,GAAI,CAAEL,GAAI,EAAGC,GAAI,EAAGK,GAAI,IAAM1B,UAE3DF,EAAAA,EAAAA,MAACiB,EAAAA,EAAG,CAACC,GAAI,CACPW,SAAU,SACVC,GAAI,EACJX,QAAS,QAETY,aAAc,CAAET,GAAI,EAAGC,GAAI,OAC3BS,UAAW,CAAEV,GAAI,OAAQC,GAAI,gCAC7BrB,SAAA,EACAG,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACRC,UAAU,MACVhB,GAAI,CACFiB,MAAO,OACPC,OAAQ,CAAEd,GAAI,QAASC,GAAI,QAASK,GAAI,QAASS,GAAI,SACrDC,UAAW,QACXC,eAAgB,UAElBhF,MAAOP,EACPwF,IAAKlG,EAAKuC,SAEZmB,EAAAA,EAAAA,MAACiB,EAAAA,EAAG,CAACC,GAAI,CACPuB,EAAG,CAAEnB,GAAI,EAAGC,GAAI,EAAGK,GAAI,GACvBF,SAAU,OACVgB,GAAI,QACJxC,SAAA,EACAG,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTC,QAAQ,KACRV,UAAU,KACVhB,GAAI,CACFY,GAAI,EACJe,MAAO,UACPC,WAAY,OACZC,SAAU,CAAEzB,GAAI,SAAUC,GAAI,OAAQK,GAAI,SAAUS,GAAI,QACxDW,WAAY,CAAE1B,GAAI,IAAKM,GAAI,MAC3B1B,SAED5D,EAAKuC,SAERwB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTC,QAAQ,YACRC,MAAM,iBACN3B,GAAI,CACFY,GAAI,EACJiB,SAAU,CAAEzB,GAAI,WAAYC,GAAI,OAAQK,GAAI,UAC5CqB,UAAW,UACX/C,SAED5D,EAAKsB,OAGPtB,EAAK4G,QAAU5G,EAAK6G,cACnBnD,EAAAA,EAAAA,MAACiB,EAAAA,EAAG,CAACC,GAAI,CAAEkC,QAAS,OAAQC,WAAY,SAAUvB,GAAI,GAAI5B,SAAA,EACxDG,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACRC,UAAU,MACV3E,MAAOjB,EAAK6G,YACZX,IAAKlG,EAAK4G,OACVhC,GAAI,CACFiB,MAAO,GACPC,OAAQ,GACRL,aAAc,MACdO,UAAW,QACXN,UAAW,6BACXsB,GAAI,MAGRjD,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CAACC,QAAQ,YAAYC,MAAM,eAAe3B,GAAI,CAAE4B,WAAY,KAAM5C,SAC1E5D,EAAK4G,aAIZ7C,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTC,QAAQ,QACRV,UAAU,MACVhB,GAAI,CACF2B,MAAO,OACPG,WAAY,IACZD,SAAU,CAAEzB,GAAI,OAAQC,GAAI,UAAWK,GAAI,UAE3C2B,UAAW,aACX,QAAS,CACP7B,SAAU,OACVU,OAAQ,OACRgB,QAAS,QACTI,OAAQ,YACRzB,aAAc,MACdC,UAAW,8BAEb,OAAQ,CACNe,SAAU,CAAEzB,GAAI,SAAUC,GAAI,SAAUK,GAAI,UAC5CkB,WAAY,IACZW,GAAI,EACJ3B,GAAI,EACJe,MAAO,WAET,OAAQ,CACNE,SAAU,CAAEzB,GAAI,SAAUC,GAAI,SAAUK,GAAI,UAC5CkB,WAAY,IACZW,GAAI,EACJ3B,GAAI,EACJe,MAAO,WAET,MAAO,CACLf,GAAI,IACJ4B,cAAe,WAEjB,aAAc,CACZC,GAAI,CAAErC,GAAI,EAAGC,GAAI,GACjBO,GAAI,IACJ8B,GAAI,CAAEtC,GAAI,EAAGC,GAAI,IAEnB,OAAQ,CACNO,GAAI,GAEN,MAAO,CACLe,MAAO,UACPgB,eAAgB,OAChBN,UAAW,aACX,UAAW,CACTM,eAAgB,cAGpB,eAAgB,CACdC,WAAY,iBACZC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJpB,MAAO,OACPI,UAAW,UAEb,gBAAiB,CACfiB,UAAW,OACXxC,SAAU,OACVyC,QAAS,CAAE7C,GAAI,EAAGC,GAAI,GACtBQ,aAAc,MACdqC,gBAAiB,UACjBrB,SAAU,CAAEzB,GAAI,UAAWC,GAAI,YAGnC8C,wBAAyB,CAAEC,OAAQhI,EAAKiE,YAG1CP,EAAAA,EAAAA,MAACiB,EAAAA,EAAG,CAACC,GAAI,CACPuC,GAAI,EACJhB,EAAG,CAAEnB,GAAI,EAAGM,GAAI,GAChBT,QAAS,CAAEG,GAAI,cAAeC,GAAI,WAClCQ,aAAc,CAAET,GAAI,EAAGC,GAAI,GAC3BS,UAAW,CAAEV,GAAI,OAAQC,GAAI,+BAC7BgD,UAAW,UACXrE,SAAA,EACAG,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTC,QAAQ,KACR1B,GAAI,CACFY,GAAI,EACJgB,WAAY,OACZD,MAAO,OACPE,SAAU,CAAEzB,GAAI,SAAUM,GAAI,YAC9B1B,SACH,0DAGDF,EAAAA,EAAAA,MAACwE,EAAAA,EAAK,CACJC,UAAU,MACVC,QAAS,CAAEpD,GAAI,EAAGC,GAAI,GACtBoD,eAAe,SAAQzE,SAAA,EAEvBG,EAAAA,EAAAA,KAACuE,EAAAA,GAAmB,CAACC,IAAKjI,EAAkBkI,MAAOxI,EAAKuC,MAAOkB,YAAazD,EAAKyD,YAAagF,QAAQ,WAAWC,QAASA,IAjfhHC,EAACJ,EAAKC,EAAOI,KACvC7H,QAAQC,IAAI,oCAAqCuH,GAGjD,MAAMM,EAAa,kDAAAxI,OAAqDsB,mBAAmB4G,IAG3FO,MAAM,2JAGN,MAAMC,EAAc7G,OAAO8G,KAAKH,EAAe,UAG/CI,YAAW,KAET,GAAI/G,OAAOC,GAAI,CACbpB,QAAQC,IAAI,sCACZ,IACEkB,OAAOC,GAAG+G,GAAG,CACXC,OAAQ,QACRhF,KAAMoE,EACNC,MAAOA,EACPY,eAAe,IACd,SAASC,IACLA,GAAYA,EAASzH,OACxBb,QAAQa,MAAM,iCAA0C,OAARyH,QAAQ,IAARA,OAAQ,EAARA,EAAUzH,OAEtDmH,GAAaA,EAAYO,QACzBV,GAAUA,MAEd7H,QAAQC,IAAI,wCAAyCqI,GACjDN,GAAaA,EAAYO,QACzBV,GAAUA,IAElB,GACF,CAAE,MAAOhH,GACPb,QAAQa,MAAM,wBAAyBA,GACnCmH,GAAaA,EAAYO,QACzBV,GAAUA,GAChB,CACF,MACE7H,QAAQC,IAAI,qEACR+H,GAAaA,EAAYO,QAEzBV,GAAUA,GAChB,GACC,IAAK,EAmcwID,CAAoBrI,EAAkBN,EAAKuC,OAAO,IAAMxB,QAAQC,IAAI,4BAA2B4C,UAC7NG,EAAAA,EAAAA,KAACwF,EAAAA,GAAY,CAACC,KAAM,GAAIC,OAAK,OAE/B1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAkB,CAACnB,IAAKjI,EAAkBiC,MAAOvC,EAAKuC,MAAOoH,IAAI,UAAUC,SAAU,CAAC,oBAAkB,gBAAiB,iBAAchG,UACtIG,EAAAA,EAAAA,KAAC8F,EAAAA,GAAW,CAACL,KAAM,GAAIC,OAAK,OAE9B1F,EAAAA,EAAAA,KAAC+F,EAAAA,GAAmB,CAACvB,IAAKjI,EAAkBiC,MAAOvC,EAAKuC,MAAOwH,QAAS/J,EAAKyD,YAAauG,OAAO,UAASpG,UACxGG,EAAAA,EAAAA,KAACkG,EAAAA,GAAY,CAACT,KAAM,GAAIC,OAAK,OAE/B1F,EAAAA,EAAAA,KAACmG,EAAAA,GAAmB,CAAC3B,IAAKjI,EAAkBiC,MAAOvC,EAAKuC,MAAO4H,UAAU,MAAKvG,UAC5EG,EAAAA,EAAAA,KAACqG,EAAAA,GAAY,CAACZ,KAAM,GAAIC,OAAK,uBAU1CY,IAoCA,C","sources":["pages/BlogPost.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, CardMedia, Stack, Link } from '@mui/material';\nimport { blogPosts } from '../data/blogData';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  FacebookIcon,\n  LinkedinIcon,\n  TwitterIcon,\n  WhatsappIcon\n} from 'react-share';\n\n// Función personalizada para compartir en Facebook con refresco de caché\nconst customFacebookShare = (url, quote, callback) => {\n  console.log('Compartiendo en Facebook con URL:', url);\n  \n  // Intentamos forzar la actualización de la caché de Facebook\n  const fbDebuggerUrl = `https://developers.facebook.com/tools/debug/?q=${encodeURIComponent(url)}`;\n  \n  // Mostrar alerta para informar al usuario sobre el depurador\n  alert('Se abrirá el depurador de Facebook en una nueva ventana. Haz clic en \"Depurar\" para actualizar la caché y luego podrás compartir el contenido.');\n  \n  // Abrir depurador de Facebook en una nueva ventana para forzar el refresco\n  const debugWindow = window.open(fbDebuggerUrl, '_blank');\n  \n  // Esperar un momento antes de abrir la ventana de compartir\n  setTimeout(() => {\n    // Si la API de FB está disponible, intentamos compartir directamente con ella\n    if (window.FB) {\n      console.log('Usando Facebook SDK para compartir');\n      try {\n        window.FB.ui({\n          method: 'share',\n          href: url,\n          quote: quote,\n          mobile_iframe: true\n        }, function(response) {\n          if (!response || response.error) {\n            console.error('Error al compartir con FB SDK:', response?.error);\n            // Si falla, cerrar la ventana del depurador y abrir diálogo normal\n            if (debugWindow) debugWindow.close();\n            if (callback) callback();\n          } else {\n            console.log('Compartido correctamente en Facebook:', response);\n            if (debugWindow) debugWindow.close();\n            if (callback) callback();\n          }\n        });\n      } catch (error) {\n        console.error('Error al usar FB SDK:', error);\n        if (debugWindow) debugWindow.close();\n        if (callback) callback();\n      }\n    } else {\n      console.log('Facebook SDK no disponible, usando diálogo de compartir normal');\n      if (debugWindow) debugWindow.close();\n      \n      if (callback) callback();\n    }\n  }, 2000); // Esperar 2 segundos para dar tiempo al depurador a actualizar la caché\n};\n\nconst BlogPost = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const post = blogPosts.find(post => post.id === id);\n  \n  // Asegurarnos de que las URLs sean absolutas y accesibles\n  const baseUrl = 'https://adasoft.com.ar';\n  // Usar el formato con hash para que funcione con GitHub Pages y HashRouter\n  const shareUrl = `${baseUrl}/#/blog/${id}`;\n  \n  // URL específica para compartir en Facebook (apunta al HTML estático pre-renderizado)\n  const facebookShareUrl = `${baseUrl}/blog/${id}.html?t=${new Date().getTime()}`;\n  \n  // Preparar las variables de imagen SOLO si el post existe\n  let imageUrl = '';\n  let optimizedImageUrl = '';\n  let absoluteImageUrl = '';\n  let isoDate = new Date().toISOString();\n  const timestamp = new Date().getTime();\n  \n  // Preparar datos solo si el post existe\n  if (post) {\n    console.log('Procesando post con ID:', id);\n    console.log('Imagen del post:', post.image);\n    \n    // Aseguramos que la URL de la imagen sea absoluta\n    imageUrl = post.image;\n    \n    // Si la URL no comienza con http, construimos la URL absoluta\n    if (!post.image.startsWith('http')) {\n      imageUrl = `${baseUrl}${post.image}`;\n      console.log('URL relativa detectada, convertida a absoluta:', imageUrl);\n    } else {\n      console.log('URL ya es absoluta:', imageUrl);\n    }\n    \n    // Para la URL absoluta usada en meta tags, eliminamos cualquier parámetro existente\n    // que podría estar causando problemas con las redes sociales\n    let cleanImageUrl = imageUrl;\n    if (cleanImageUrl.includes('?')) {\n      cleanImageUrl = cleanImageUrl.split('?')[0];\n      console.log('Limpiando URL de parámetros:', cleanImageUrl);\n    }\n    \n    // Asegurarnos de que la URL absoluta sea correcta para redes sociales\n    // Añadir timestamp para evitar caché en Facebook\n    const cacheBuster = `?v=${new Date().getTime()}`;\n    absoluteImageUrl = cleanImageUrl; // Sin cache buster para meta tags\n    console.log('URL absoluta final para meta tags:', absoluteImageUrl);\n    \n    // Para la imagen que se muestra en la página, si es una ruta relativa, usar directamente la ruta relativa\n    if (post.image.startsWith('/')) {\n      // Es una ruta relativa, usarla directamente\n      optimizedImageUrl = `${post.image}?v=${timestamp}`;\n    } else if (post.image.startsWith('http')) {\n      // Es una URL absoluta, usarla con timestamp\n      optimizedImageUrl = `${cleanImageUrl}?v=${timestamp}`;\n    } else {\n      // Si no tiene / al inicio, añadirla\n      optimizedImageUrl = `/${post.image}?v=${timestamp}`;\n    }\n    \n    console.log('URL optimizada para visualización:', optimizedImageUrl);\n    \n    // Crear fecha en formato ISO para Schema.org\n    try {\n      isoDate = post.date ? new Date(post.date).toISOString() : new Date().toISOString();\n    } catch (e) {\n      console.warn(`Could not parse date for post ${id}: ${post.date}`);\n      isoDate = new Date().toISOString();\n    }\n  }\n  \n  // IMPORTANTE: Todos los hooks deben ser usados antes de cualquier return condicional\n  useEffect(() => {\n    // Debug para ayudar en el diagnóstico\n    console.log('Cargando blog post:', id);\n    console.log('Location:', location.pathname);\n    console.log('Post image:', post?.image);\n    console.log('Share URL:', shareUrl);\n    console.log('Refresh Facebook cache with:', `https://developers.facebook.com/tools/debug/?q=${encodeURIComponent(shareUrl)}`);\n    \n    // Si no se encuentra el post, redirigir al blog\n    if (!post) {\n      console.error(`Post no encontrado: ${id}`);\n      navigate('/blog');\n      return;\n    }\n\n    // Precargar la imagen solo si tenemos un post válido\n    if (optimizedImageUrl) {\n      const preloadImage = new Image();\n      preloadImage.src = optimizedImageUrl;\n      preloadImage.onload = () => {\n        console.log('Imagen precargada correctamente:', optimizedImageUrl);\n      };\n      preloadImage.onerror = () => {\n        console.error('Error al precargar la imagen:', optimizedImageUrl);\n      };\n    }\n\n    // Actualizar Facebook si está disponible (esto ayuda con FBXML)\n    if (typeof window.FB !== 'undefined') {\n      window.FB.XFBML.parse();\n    }\n    \n    // Configurar el título del documento\n    if (post) {\n      document.title = `${post.title} | ADASOFT - Desarrollo de Software y Diseño Web`;\n    }\n    \n    // Forzar refresco de meta tags para redes sociales\n    const metaTags = document.getElementsByTagName('meta');\n    for (let i = 0; i < metaTags.length; i++) {\n      if (metaTags[i].getAttribute('property') === 'og:image' || \n          metaTags[i].getAttribute('name') === 'twitter:image') {\n        // No hacemos nada aquí porque ahora usamos optimizedImageUrl en las etiquetas meta\n        // que ya incluye el timestamp\n      }\n    }\n  }, [post, shareUrl, id, location, navigate, optimizedImageUrl]);\n\n  // Efecto adicional para forzar la actualización de metatags específicamente para Facebook\n  useEffect(() => {\n    if (!post) return;\n    \n    // Este efecto se ejecuta solo una vez cuando se carga el componente\n    const forceFacebookUpdate = async () => {\n      try {\n        // Crear o actualizar dinámicamente el meta tag og:image para Facebook\n        let ogImageTag = document.querySelector('meta[property=\"og:image\"]');\n        if (!ogImageTag) {\n          ogImageTag = document.createElement('meta');\n          ogImageTag.setAttribute('property', 'og:image');\n          document.head.appendChild(ogImageTag);\n        }\n        ogImageTag.setAttribute('content', absoluteImageUrl);\n        \n        console.log('Forzando actualización de meta tag para Facebook:', absoluteImageUrl);\n        \n        // Esperar para asegurarse de que la imagen se ha cargado correctamente\n        return new Promise((resolve) => {\n          const img = new Image();\n          img.onload = () => {\n            console.log('Imagen verificada y accesible');\n            resolve(true);\n          };\n          img.onerror = () => {\n            console.error('Imagen no accesible, Facebook podría usar imagen fallback');\n            resolve(false);\n          };\n          img.src = absoluteImageUrl;\n        });\n      } catch (error) {\n        console.error('Error al forzar actualización para Facebook:', error);\n      }\n    };\n    \n    forceFacebookUpdate();\n  }, [post, absoluteImageUrl]);\n\n  // Función para forzar la actualización de la caché de Facebook manualmente\n  const forceRefreshFacebookCache = () => {\n    if (!post) return;\n    \n    // URL con un parámetro de tiempo para evitar caché\n    const urlWithTimestamp = `${facebookShareUrl}&fresh=${new Date().getTime()}`;\n    \n    // Abrir el depurador de Facebook en una nueva ventana con la URL con timestamp\n    window.open(`https://developers.facebook.com/tools/debug/?q=${encodeURIComponent(urlWithTimestamp)}&scrape=true`, '_blank');\n    \n    // Mostrar mensaje al usuario\n    alert('Se ha abierto el depurador de Facebook en una nueva ventana. Haz clic en el botón \"Depurar\" para forzar la actualización del caché.');\n  };\n\n  // Si no hay post, no renderizamos nada (el efecto se encargará de redirigir)\n  if (!post) {\n    return null;\n  }\n  \n  // Preparar Schema.org JSON-LD para el artículo\n  const schemaOrgArticle = {\n    '@context': 'https://schema.org',\n    '@type': 'BlogPosting',\n    'mainEntityOfPage': {\n      '@type': 'WebPage',\n      '@id': shareUrl\n    },\n    'headline': post.title,\n    'description': post.description,\n    'image': absoluteImageUrl,\n    'author': {\n      '@type': 'Organization',\n      'name': 'ADASOFT',\n      'url': 'https://adasoft.com.ar'\n    },\n    'publisher': {\n      '@type': 'Organization',\n      'name': 'ADASOFT',\n      'logo': {\n        '@type': 'ImageObject',\n        'url': 'https://adasoft.com.ar/images/logotrans2.png'\n      }\n    },\n    'datePublished': isoDate,\n    'dateModified': isoDate\n  };\n\n  return (\n    <>\n      <Helmet prioritizeSeoTags>\n        <title>{`${post.title} | ADASOFT - Desarrollo de Software y Diseño Web`}</title>\n        <meta name=\"description\" content={post.description} />\n        <link rel=\"canonical\" href={shareUrl} />\n        \n        {/* Control de caché para forzar a los crawlers a obtener siempre la última versión */}\n        <meta httpEquiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n        <meta httpEquiv=\"Pragma\" content=\"no-cache\" />\n        <meta httpEquiv=\"Expires\" content=\"0\" />\n        \n        {/* Open Graph / Facebook Meta Tags */}\n        <meta property=\"og:url\" content={shareUrl} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.title} />\n        <meta property=\"og:description\" content={post.description} />\n        <meta property=\"og:image\" content={absoluteImageUrl} />\n        <meta property=\"og:image:secure_url\" content={absoluteImageUrl} />\n        <meta property=\"og:image:width\" content=\"1200\" />\n        <meta property=\"og:image:height\" content=\"630\" />\n        <meta property=\"og:image:alt\" content={post.title} />\n        <meta property=\"og:image:type\" content=\"image/jpeg\" />\n        <meta property=\"og:site_name\" content=\"ADASOFT\" />\n        <meta property=\"og:updated_time\" content={new Date().toISOString()} />\n        <meta property=\"fb:app_id\" content=\"2375482829489229\" />\n        <meta property=\"article:published_time\" content={isoDate} />\n        <meta property=\"article:modified_time\" content={new Date().toISOString()} />\n        <meta property=\"article:author\" content=\"ADASOFT\" />\n        <meta property=\"article:section\" content=\"Tecnología\" />\n        <meta property=\"article:tag\" content={post.tags ? post.tags.join(', ') : \"software, desarrollo web, diseño web, servicios informáticos\"} />\n        \n        {/* Twitter Meta Tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@adasoft\" />\n        <meta name=\"twitter:creator\" content=\"@adasoft\" />\n        <meta name=\"twitter:url\" content={shareUrl} />\n        <meta name=\"twitter:title\" content={post.title} />\n        <meta name=\"twitter:description\" content={post.description} />\n        <meta name=\"twitter:image\" content={absoluteImageUrl} />\n        <meta name=\"twitter:image:alt\" content={post.title} />\n\n        {/* Additional SEO Meta Tags */}\n        <meta name=\"robots\" content=\"index, follow, max-image-preview:large\" />\n        <meta name=\"author\" content=\"ADASOFT\" />\n        <meta name=\"publisher\" content=\"ADASOFT\" />\n        <meta name=\"keywords\" content={post.tags ? post.tags.join(', ') : \"desarrollo software, páginas web, aplicaciones, diseño web, software a medida, soluciones tecnológicas\"} />\n        \n        {/* LinkedIn specific tags */}\n        <meta property=\"linkedin:title\" content={post.title} />\n        <meta property=\"linkedin:description\" content={post.description} />\n        <meta property=\"linkedin:image\" content={absoluteImageUrl} />\n        \n        {/* WhatsApp specific preview */}\n        <meta property=\"og:site_name\" content=\"ADASOFT\" />\n        <meta property=\"og:locale\" content=\"es_ES\" />\n        \n        {/* Force social media platforms to use fresh content */}\n        <meta name=\"theme-color\" content=\"#2c3e50\" />\n        <meta http-equiv=\"x-dns-prefetch-control\" content=\"on\" />\n        \n        {/* Schema.org JSON-LD structured data */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgArticle)}\n        </script>\n      </Helmet>\n\n      <Box sx={{ \n        bgcolor: '#f8f9fa', \n        minHeight: '100vh',\n        pt: { xs: 0, sm: '72px' }, \n        pb: 8\n      }}>\n        <Container maxWidth=\"lg\" sx={{ px: { xs: 0, sm: 2, md: 3 } }}>\n          {/* Box styling with conditional rendering for mobile devices */}\n          <Box sx={{ \n            overflow: 'hidden', \n            mb: 4, \n            bgcolor: 'white',\n            // Remove borders and shadows on mobile\n            borderRadius: { xs: 0, sm: '8px' },\n            boxShadow: { xs: 'none', sm: '0 4px 20px rgba(0,0,0,0.06)' }\n          }}>\n            <CardMedia\n              component=\"img\"\n              sx={{ \n                width: '100%', \n                height: { xs: '220px', sm: '300px', md: '400px', lg: '500px' }, \n                objectFit: 'cover',\n                objectPosition: 'center'\n              }}\n              image={optimizedImageUrl}\n              alt={post.title}\n            />\n            <Box sx={{ \n              p: { xs: 3, sm: 4, md: 5 },\n              maxWidth: '100%',\n              mx: 'auto'\n            }}>\n              <Typography \n                variant=\"h3\" \n                component=\"h1\" \n                sx={{ \n                  mb: 2, \n                  color: '#1a1a2e', \n                  fontWeight: 'bold', \n                  fontSize: { xs: '1.5rem', sm: '2rem', md: '2.5rem', lg: '3rem' },\n                  lineHeight: { xs: 1.3, md: 1.2 }\n                }}\n              >\n                {post.title}\n              </Typography>\n              <Typography \n                variant=\"subtitle1\" \n                color=\"text.secondary\" \n                sx={{ \n                  mb: 4, \n                  fontSize: { xs: '0.875rem', sm: '1rem', md: '1.1rem' },\n                  fontStyle: 'italic'\n                }}\n              >\n                {post.date}\n              </Typography>\n              {/* Autor del post */}\n              {post.author && post.authorImage && (\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\n                  <CardMedia\n                    component=\"img\"\n                    image={post.authorImage}\n                    alt={post.author}\n                    sx={{\n                      width: 48,\n                      height: 48,\n                      borderRadius: '50%',\n                      objectFit: 'cover',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.10)',\n                      mr: 2\n                    }}\n                  />\n                  <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ fontWeight: 500 }}>\n                    {post.author}\n                  </Typography>\n                </Box>\n              )}\n              <Typography \n                variant=\"body1\" \n                component=\"div\" \n                sx={{ \n                  color: '#333', \n                  lineHeight: 1.8,\n                  fontSize: { xs: '1rem', sm: '1.05rem', md: '1.1rem' },\n                  // Improve content readability on mobile\n                  wordBreak: 'break-word',\n                  '& img': {\n                    maxWidth: '100%',\n                    height: 'auto',\n                    display: 'block',\n                    margin: '2rem auto',\n                    borderRadius: '8px',\n                    boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n                  },\n                  '& h3': {\n                    fontSize: { xs: '1.3rem', sm: '1.6rem', md: '1.8rem' },\n                    fontWeight: 600,\n                    mt: 4,\n                    mb: 2,\n                    color: '#1a1a2e'\n                  },\n                  '& h4': {\n                    fontSize: { xs: '1.1rem', sm: '1.3rem', md: '1.5rem' },\n                    fontWeight: 600,\n                    mt: 3,\n                    mb: 2,\n                    color: '#1a1a2e'\n                  },\n                  '& p': {\n                    mb: 2.5,\n                    letterSpacing: '0.015em'\n                  },\n                  '& ul, & ol': {\n                    ml: { xs: 2, sm: 3 },\n                    mb: 2.5,\n                    pr: { xs: 1, sm: 0 }\n                  },\n                  '& li': {\n                    mb: 1\n                  },\n                  '& a': {\n                    color: '#0066cc',\n                    textDecoration: 'none',\n                    wordBreak: 'break-word',\n                    '&:hover': {\n                      textDecoration: 'underline'\n                    }\n                  },\n                  '& blockquote': {\n                    borderLeft: '4px solid #ddd',\n                    pl: 2,\n                    py: 1,\n                    my: 2,\n                    color: '#555',\n                    fontStyle: 'italic'\n                  },\n                  '& pre, & code': {\n                    overflowX: 'auto',\n                    maxWidth: '100%',\n                    padding: { xs: 1, sm: 2 },\n                    borderRadius: '4px',\n                    backgroundColor: '#f5f5f5',\n                    fontSize: { xs: '0.85rem', sm: '0.9rem' }\n                  }\n                }} \n                dangerouslySetInnerHTML={{ __html: post.content }} \n              />\n              \n              <Box sx={{ \n                mt: 6, \n                p: { xs: 2, md: 4 }, \n                bgcolor: { xs: 'transparent', sm: '#f8f9fa' }, \n                borderRadius: { xs: 0, sm: 2 },\n                boxShadow: { xs: 'none', sm: '0 2px 12px rgba(0,0,0,0.05)' },\n                textAlign: 'center'\n              }}>\n                <Typography \n                  variant=\"h6\" \n                  sx={{ \n                    mb: 3, \n                    fontWeight: 'bold', \n                    color: '#333',\n                    fontSize: { xs: '1.1rem', md: '1.25rem' }\n                  }}\n                >\n                  ¿Te gustó este artículo? ¡Compártelo!\n                </Typography>\n                <Stack \n                  direction=\"row\" \n                  spacing={{ xs: 1, sm: 2 }} \n                  justifyContent=\"center\"\n                >\n                  <FacebookShareButton url={facebookShareUrl} quote={post.title} description={post.description} hashtag=\"#ADASOFT\" onClick={() => customFacebookShare(facebookShareUrl, post.title, () => console.log('Compartido en Facebook'))}>\n                    <FacebookIcon size={40} round />\n                  </FacebookShareButton>\n                  <TwitterShareButton url={facebookShareUrl} title={post.title} via=\"adasoft\" hashtags={[\"Automatización\", \"Productividad\", \"Tecnología\"]}>\n                    <TwitterIcon size={40} round />\n                  </TwitterShareButton>\n                  <LinkedinShareButton url={facebookShareUrl} title={post.title} summary={post.description} source=\"ADASOFT\">\n                    <LinkedinIcon size={40} round />\n                  </LinkedinShareButton>\n                  <WhatsappShareButton url={facebookShareUrl} title={post.title} separator=\" - \">\n                    <WhatsappIcon size={40} round />\n                  </WhatsappShareButton>\n                </Stack>\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n\n      {/* Debug panel for admin - hidden in production */}\n      {process.env.NODE_ENV === 'development' && (\n        <Box sx={{ mt: 4, p: 2, bgcolor: '#f5f5f5', borderRadius: 2, mx: 'auto', maxWidth: 'md' }}>\n          <Typography variant=\"h6\" gutterBottom>Debug Info (solo visible en desarrollo)</Typography>\n          <Typography variant=\"body2\">ID del post: {id}</Typography>\n          <Typography variant=\"body2\">URL para compartir: {shareUrl}</Typography>\n          <Typography variant=\"body2\">URL de la imagen original: {imageUrl}</Typography>\n          <Typography variant=\"body2\">URL absoluta de la imagen: {absoluteImageUrl}</Typography>\n          <Typography variant=\"body2\">URL de la imagen optimizada: {optimizedImageUrl}</Typography>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" gutterBottom>Para forzar la actualización del caché de Facebook:</Typography>\n            <Link\n              href={`https://developers.facebook.com/tools/debug/?q=${encodeURIComponent(facebookShareUrl)}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              sx={{ wordBreak: 'break-all' }}\n            >\n              Abrir Depurador de Facebook\n            </Link>\n          </Box>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" gutterBottom>Para forzar la actualización del caché de Twitter:</Typography>\n            <Link\n              href={`https://cards-dev.twitter.com/validator?url=${encodeURIComponent(shareUrl)}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              sx={{ wordBreak: 'break-all' }}\n            >\n              Abrir Validador de Twitter Cards\n            </Link>\n          </Box>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" gutterBottom>Botón de depuración para forzar actualización de caché de Facebook:</Typography>\n            <button onClick={forceRefreshFacebookCache}>Forzar actualización de caché de Facebook</button>\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default BlogPost;"],"names":["BlogPost","id","useParams","navigate","useNavigate","location","useLocation","post","blogPosts","find","baseUrl","shareUrl","concat","facebookShareUrl","Date","getTime","imageUrl","optimizedImageUrl","absoluteImageUrl","isoDate","toISOString","timestamp","console","log","image","startsWith","cleanImageUrl","includes","split","date","e","warn","useEffect","pathname","encodeURIComponent","error","preloadImage","Image","src","onload","onerror","window","FB","XFBML","parse","document","title","metaTags","getElementsByTagName","i","length","getAttribute","async","ogImageTag","querySelector","createElement","setAttribute","head","appendChild","Promise","resolve","img","forceFacebookUpdate","schemaOrgArticle","description","_jsxs","_Fragment","children","Helmet","prioritizeSeoTags","_jsx","name","content","rel","href","httpEquiv","property","tags","join","type","JSON","stringify","Box","sx","bgcolor","minHeight","pt","xs","sm","pb","Container","maxWidth","px","md","overflow","mb","borderRadius","boxShadow","CardMedia","component","width","height","lg","objectFit","objectPosition","alt","p","mx","Typography","variant","color","fontWeight","fontSize","lineHeight","fontStyle","author","authorImage","display","alignItems","mr","wordBreak","margin","mt","letterSpacing","ml","pr","textDecoration","borderLeft","pl","py","my","overflowX","padding","backgroundColor","dangerouslySetInnerHTML","__html","textAlign","Stack","direction","spacing","justifyContent","FacebookShareButton","url","quote","hashtag","onClick","customFacebookShare","callback","fbDebuggerUrl","alert","debugWindow","open","setTimeout","ui","method","mobile_iframe","response","close","FacebookIcon","size","round","TwitterShareButton","via","hashtags","TwitterIcon","LinkedinShareButton","summary","source","LinkedinIcon","WhatsappShareButton","separator","WhatsappIcon","process"],"sourceRoot":""}